# dune build
# OCAMLPARAM: unset
# Shared cache: disabled
# Shared cache location: /home/noklon/.cache/dune/db
# Workspace root: /home/noklon/OCAML-projects/test
# Auto-detected concurrency: 16
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dev
#  ; merlin = true
#  ; fdo_target_exe = None
#  ; build_dir = In_build_dir "default"
#  ; installed_env =
#      map
#        { "INSIDE_DUNE" : "/home/noklon/OCAML-projects/test/_build/default" }
#  ; instrument_with = []
#  }
$ /home/noklon/.opam/main/bin/ocamlc.opt -config > /tmp/dune_8091ba_output
$ (cd _build/default && /home/noklon/.opam/main/bin/ocamlopt.opt -w @1..3@5..28@31..39@43@46..47@49..57@61..62@67@69-40 -strict-sequence -strict-formats -short-paths -keep-locs -g -I bin/.main.eobjs/byte -I bin/.main.eobjs/native -I lib/.test.objs/byte -I lib/.test.objs/native -intf-suffix .ml -no-alias-deps -opaque -o bin/.main.eobjs/native/dune__exe__Main.cmx -c -impl bin/main.ml)
> File "bin/main.ml", line 1, characters 8-17:
> 1 | let rec revtuples lst = List.fold_left (fun (x) (y,z) -> x@ [(z,y)] ) [] lst;;
>             ^^^^^^^^^
> Error (warning 39 [unused-rec-flag]): unused rec flag.
>
> File "bin/main.ml", line 3, characters 8-15:
> 3 | let rec oddeven lst = List.fold_left (fun x y -> if List.length lst mod 2 = 1 then (if List.length x mod 2 = 1 then x @ [y] else y::x) else (if List.length x mod 2 = 0 then x @ [y] else y::x) ) [] lst;;
>             ^^^^^^^
> Error (warning 39 [unused-rec-flag]): unused rec flag.
>
> File "bin/main.ml", line 19, characters 9-12:
> 19 |  let rec map f ocamlllist = Lazy.map f ocamlllist;;
>               ^^^
> Error (warning 39 [unused-rec-flag]): unused rec flag.
>
> File "bin/main.ml", line 1, characters 8-17:
> 1 | let rec revtuples lst = List.fold_left (fun (x) (y,z) -> x@ [(z,y)] ) [] lst;;
>             ^^^^^^^^^
> Error (warning 32 [unused-value-declaration]): unused value revtuples.
>
> File "bin/main.ml", line 3, characters 8-15:
> 3 | let rec oddeven lst = List.fold_left (fun x y -> if List.length lst mod 2 = 1 then (if List.length x mod 2 = 1 then x @ [y] else y::x) else (if List.length x mod 2 = 0 then x @ [y] else y::x) ) [] lst;;
>             ^^^^^^^
> Error (warning 32 [unused-value-declaration]): unused value oddeven.
>
> File "bin/main.ml", line 8, characters 0-42:
> 8 | type 'a ocaml_llist = 'a ocaml_cell Lazy.t and 'a ocaml_cell = NilO | ConsO of ('a * 'a ocaml_llist);;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> Error (warning 34 [unused-type-declaration]): unused type ocaml_llist.
>
> File "bin/main.ml", line 8, characters 43-100:
> 8 | type 'a ocaml_llist = 'a ocaml_cell Lazy.t and 'a ocaml_cell = NilO | ConsO of ('a * 'a ocaml_llist);;
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> Error (warning 34 [unused-type-declaration]): unused type ocaml_cell.
>
> File "bin/main.ml", line 8, characters 63-67:
> 8 | type 'a ocaml_llist = 'a ocaml_cell Lazy.t and 'a ocaml_cell = NilO | ConsO of ('a * 'a ocaml_llist);;
>                                                                    ^^^^
> Error (warning 37 [unused-constructor]): unused constructor NilO.
>
> File "bin/main.ml", line 8, characters 68-100:
> 8 | type 'a ocaml_llist = 'a ocaml_cell Lazy.t and 'a ocaml_cell = NilO | ConsO of ('a * 'a ocaml_llist);;
>                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> Error (warning 37 [unused-constructor]): unused constructor ConsO.
>
> File "bin/main.ml", line 14, characters 9-12:
> 14 |  let rec map f llist = match llist () with
>               ^^^
> Error (warning 32 [unused-value-declaration]): unused value map.
>
> File "bin/main.ml", line 19, characters 9-12:
> 19 |  let rec map f ocamlllist = Lazy.map f ocamlllist;;
>               ^^^
> Error (warning 32 [unused-value-declaration]): unused value map.
[2]
